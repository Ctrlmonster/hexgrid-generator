/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 fantastic_demo_level_grounded.glb -s -t -T
*/

import * as THREE from 'three'
import React, {forwardRef, Ref, useEffect, useRef} from 'react'
import {Decal, useGLTF, useTexture} from '@react-three/drei'
import {GLTF} from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    godrays: THREE.Mesh
    ground_geometry: THREE.Mesh
    ground_geometry_1: THREE.Mesh
    ground_geometry_2: THREE.Mesh
    ground_geometry_3: THREE.Mesh
    ground_geometry_4: THREE.Mesh
    roof: THREE.Mesh
    walls: THREE.Mesh
    railings001: THREE.Mesh
    wooden_column: THREE.Mesh
    P_PROP_candle_dungeon_07: THREE.Mesh
    P_PROP_candle_dungeon_07_1: THREE.Mesh
    P_PROP_candle_dungeon_07_2: THREE.Mesh
    P_PROP_candle_dungeon_07_3: THREE.Mesh
    P_PROP_candle_dungeon_07_4: THREE.Mesh
    P_PROP_candle_dungeon_07_5: THREE.Mesh
    P_PROP_candle_dungeon_07_6: THREE.Mesh
    P_PROP_candle_dungeon_07_7: THREE.Mesh
    P_PROP_chain_small_dungeon_01: THREE.Mesh
    P_PROP_chain_small_dungeon_01_1: THREE.Mesh
    P_PROP_chain_small_dungeon_01_2: THREE.Mesh
    P_PROP_chain_small_dungeon_01_3: THREE.Mesh
    spiderwebs: THREE.Mesh
    stones: THREE.Mesh
    vegetation: THREE.Mesh
  }
  materials: {
    M_FX_gradient_linear_dungeon: THREE.MeshStandardMaterial
    ['M_MOD_Trim_Stone_01_v3.002']: THREE.MeshStandardMaterial
    ['M_MOD_Floor_01_v3.003']: THREE.MeshStandardMaterial
    ['M_MOD_Floor_01_v3.001']: THREE.MeshStandardMaterial
    M_PROP_dirtpile_dungeon: THREE.MeshStandardMaterial
    M_PROP_fabric_dungeon: THREE.MeshStandardMaterial
    ['M_MOD_Wall_01_v3.003']: THREE.MeshStandardMaterial
    M_wood_planks_dungeon_04: THREE.MeshStandardMaterial
    M_PROP_candle_dungeon: THREE.MeshStandardMaterial
    M_PROP_stone_deco_dungeon: THREE.MeshStandardMaterial
    M_PROP_books_dungeon: THREE.MeshStandardMaterial
    M_PROP_bottle_dungeon: THREE.MeshStandardMaterial
    M_PROP_weapon_dungeon: THREE.MeshStandardMaterial
    M_PROP_skeleton_dungeon: THREE.MeshStandardMaterial
    M_PROP_pot_dungeon: THREE.MeshStandardMaterial
    M_PROP_chains_dungeon: THREE.MeshStandardMaterial
    M_wood_planks_dungeon_03: THREE.MeshStandardMaterial
    M_PROP_flags_dungeon: THREE.MeshStandardMaterial
    M_PROP_spiderweb_dungeon: THREE.MeshStandardMaterial
    M_PROP_orevein_dungeon: THREE.MeshStandardMaterial
    M_PROP_vegetation_dungeon: THREE.MeshStandardMaterial
  }
}

import url from "../../public/models/fantastic_demo_level_grounded-transformed.glb?url";
import texturePath from "../../public/images/textures/hexagon.png?url";

import {Group} from "three";


export const Model = forwardRef(function Model(props: JSX.IntrinsicElements['group'], ref: Ref<Group>) {
  const {nodes, materials} = useGLTF(url) as GLTFResult;


  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI, 0, -Math.PI]}>
        <group position={[-20, -4, 0]} rotation={[0, -1.57, 0]}>
          <group position={[0, 4, -20]} rotation={[0, -1.57, 0]}>
            <group ref={ref} position={[4, 0, 16]} rotation={[-Math.PI, 0, -Math.PI]}>
              <mesh castShadow receiveShadow geometry={nodes.ground_geometry.geometry}
                    material={materials['M_MOD_Trim_Stone_01_v3.002']}/>
              <mesh castShadow receiveShadow geometry={nodes.ground_geometry_1.geometry}
                    material={materials['M_MOD_Floor_01_v3.003']}/>
              <mesh castShadow receiveShadow geometry={nodes.ground_geometry_2.geometry}
                    material={materials['M_MOD_Floor_01_v3.001']}/>
              <mesh castShadow receiveShadow geometry={nodes.ground_geometry_3.geometry}
                    material={materials.M_PROP_dirtpile_dungeon}/>
              <mesh castShadow receiveShadow geometry={nodes.ground_geometry_4.geometry}
                    material={materials.M_PROP_fabric_dungeon}/>
            </group>
          </group>
          <group position={[28, 24, -40]} rotation={[0, -1.57, 0]}>
            <mesh castShadow receiveShadow geometry={nodes.roof.geometry} material={materials['M_MOD_Floor_01_v3.001']}
                  position={[12, 0.45, 48]}/>
          </group>
          <group position={[0, 4, -20]} rotation={[0, -1.57, 0]}>
            <mesh castShadow receiveShadow geometry={nodes.walls.geometry} material={materials['M_MOD_Wall_01_v3.003']}
                  position={[-4, 8, 32]}/>
          </group>
          <group position={[0, 4, -20]} rotation={[0, -1.57, 0]}>
            <group position={[-20, 5, 24]} rotation={[0, -1.57, 0]}>
              <mesh castShadow receiveShadow geometry={nodes.railings001.geometry}
                    material={materials['M_MOD_Trim_Stone_01_v3.002']} position={[0, -1.64, 0]}/>
            </group>
          </group>
          <group position={[24, 4, -28]} rotation={[0, -1.57, 0]}>
            <mesh castShadow receiveShadow geometry={nodes.wooden_column.geometry}
                  material={materials.M_wood_planks_dungeon_04} position={[-1.5, 0, 2]}/>
          </group>
        </group>
        <group position={[21.32, 7.96, -25.83]} rotation={[1.56, -1.57, 1.56]}>
          <group position={[0.13, 0.22, -0.06]} rotation={[0.6, 0, -0.32]} scale={[1.95, 1.03, 0.88]}>
            {
              /*
                <mesh castShadow receiveShadow geometry={nodes.godrays.geometry}
                  material={materials.M_FX_gradient_linear_dungeon} position={[0, 0, 5.84]}
                  rotation={[-Math.PI, 0, -Math.PI]} scale={[0.13, 1.72, 1.19]}/>
               */
            }
          </group>
        </group>
        <group position={[0, 1, -2]} rotation={[0, -1.57, 0]}>
          <group position={[-0.15, 0.78, 0.77]} rotation={[-0.06, -0.93, 0]}>
            <mesh castShadow receiveShadow geometry={nodes.P_PROP_candle_dungeon_07.geometry}
                  material={materials.M_PROP_candle_dungeon}/>
            <mesh castShadow receiveShadow geometry={nodes.P_PROP_candle_dungeon_07_1.geometry}
                  material={materials.M_PROP_stone_deco_dungeon}/>
            <mesh castShadow receiveShadow geometry={nodes.P_PROP_candle_dungeon_07_2.geometry}
                  material={materials.M_PROP_fabric_dungeon}/>
            <mesh castShadow receiveShadow geometry={nodes.P_PROP_candle_dungeon_07_3.geometry}
                  material={materials.M_PROP_books_dungeon}/>
            <mesh castShadow receiveShadow geometry={nodes.P_PROP_candle_dungeon_07_4.geometry}
                  material={materials.M_PROP_bottle_dungeon}/>
            <mesh castShadow receiveShadow geometry={nodes.P_PROP_candle_dungeon_07_5.geometry}
                  material={materials.M_PROP_weapon_dungeon}/>
            <mesh castShadow receiveShadow geometry={nodes.P_PROP_candle_dungeon_07_6.geometry}
                  material={materials.M_PROP_skeleton_dungeon}/>
            <mesh castShadow receiveShadow geometry={nodes.P_PROP_candle_dungeon_07_7.geometry}
                  material={materials.M_PROP_pot_dungeon}/>
          </group>
        </group>
        <group position={[0, 10, -2]} rotation={[Math.PI, 0, Math.PI]}>
          <group position={[0, 6, 0]} rotation={[0, 0, 3.14]}>
            <mesh castShadow receiveShadow geometry={nodes.P_PROP_chain_small_dungeon_01.geometry}
                  material={materials.M_PROP_chains_dungeon}/>
            <mesh castShadow receiveShadow geometry={nodes.P_PROP_chain_small_dungeon_01_1.geometry}
                  material={materials.M_wood_planks_dungeon_03}/>
            <mesh castShadow receiveShadow geometry={nodes.P_PROP_chain_small_dungeon_01_2.geometry}
                  material={materials.M_PROP_candle_dungeon}/>
            <mesh castShadow receiveShadow geometry={nodes.P_PROP_chain_small_dungeon_01_3.geometry}
                  material={materials.M_PROP_flags_dungeon}/>
          </group>
        </group>
        <mesh castShadow receiveShadow geometry={nodes.spiderwebs.geometry}
              material={materials.M_PROP_spiderweb_dungeon} position={[10.26, 0.73, -26.12]}
              rotation={[-1.64, -0.38, -2.4]} scale={1.8}/>
        <mesh castShadow receiveShadow geometry={nodes.stones.geometry} material={materials.M_PROP_orevein_dungeon}
              position={[-7.57, 0, -7.84]} rotation={[Math.PI, 0, Math.PI]}/>
        <mesh castShadow receiveShadow geometry={nodes.vegetation.geometry}
              material={materials.M_PROP_vegetation_dungeon} position={[9, 5.62, -10.02]} rotation={[0, -1.57, 0]}
              scale={2.26}/>
      </group>
    </group>
  )
})

useGLTF.preload(url)
