/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.3 rock_terrain_with_light_snow.glb -s -t -T
Author: Lassi Kaukonen (https://sketchfab.com/thesidekick)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/rock-terrain-with-light-snow-e37252871af442e2aeb3571d1d11e65a
Title: Rock terrain with light snow
*/

import * as THREE from 'three'
import React, {ForwardedRef, forwardRef, useEffect, useRef} from 'react'
import {useBVH, useGLTF} from '@react-three/drei'
import {GLTF} from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh
    Object_3: THREE.Mesh
    Object_4: THREE.Mesh
    Object_5: THREE.Mesh
    Object_6: THREE.Mesh
    Object_7: THREE.Mesh
    Object_8: THREE.Mesh
    Object_9: THREE.Mesh
    Object_10: THREE.Mesh
    Object_11: THREE.Mesh
  }
  materials: {
    Base: THREE.MeshStandardMaterial
    Rock_terrain_with_light_snow: THREE.MeshStandardMaterial
  }
}

import path from "/models/rock_terrain_with_light_snow-transformed.glb?url";


export default forwardRef(function Model(props: JSX.IntrinsicElements['group'], ref: ForwardedRef<any>) {
  const {nodes, materials} = useGLTF(path) as GLTFResult

  return (
    <group ref={ref} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh castShadow receiveShadow geometry={nodes.Object_2.geometry} material={materials.Base}/>
        <mesh castShadow receiveShadow geometry={nodes.Object_3.geometry} material={materials.Base}/>
        <mesh castShadow receiveShadow geometry={nodes.Object_4.geometry}
              material={materials.Rock_terrain_with_light_snow}/>
        <mesh castShadow receiveShadow geometry={nodes.Object_5.geometry}
              material={materials.Rock_terrain_with_light_snow}/>
        <mesh castShadow receiveShadow geometry={nodes.Object_6.geometry}
              material={materials.Rock_terrain_with_light_snow}/>
        <mesh castShadow receiveShadow geometry={nodes.Object_7.geometry}
              material={materials.Rock_terrain_with_light_snow}/>
        <mesh castShadow receiveShadow geometry={nodes.Object_8.geometry}
              material={materials.Rock_terrain_with_light_snow}/>
        <mesh castShadow receiveShadow geometry={nodes.Object_9.geometry}
              material={materials.Rock_terrain_with_light_snow}/>
        <mesh castShadow receiveShadow geometry={nodes.Object_10.geometry}
              material={materials.Rock_terrain_with_light_snow}/>
        <mesh castShadow receiveShadow geometry={nodes.Object_11.geometry}
              material={materials.Rock_terrain_with_light_snow}/>
      </group>
    </group>
  )
})

useGLTF.preload(path)
